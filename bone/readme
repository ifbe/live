;#########################大致分布####################
;#######################################################
;#######################################################
;#######################################################
;core.bin文件分布:
;[0,fff]    [0,4k)    从bios/efi初始化到干净的long mode
;[1000,1fff]    [4k,8k)    数据以及anscii点阵
;[2000,3fff]    [8k,16k)    32个异常,默认处理方式是打印临终遗言
;[4000,7fff]    [16k,32k)    汇编,界面以及一些极底层的小命令
;[8000,ffff]    [32k,64k)    纯c,硬盘/u盘/网盘驱动代码,ext/fat/hfs/ntfs文件系统代码

;内存分布:
;[0,fff]    [0,4k)    bios自己的信息以及从bios拿到的信息
;[1000,ffff]    [4k,64k)    gdt,idt等
;[10000,fffff]    [64k,1m)    把目前已经找到的信息翻译到几张最最简单的表格里
;[100000,ffffff]    [1m,16m)    几大驱动以及驱动好它们之后发现的设备等
;[1000000,1ffffff]    [16,32m)    总共4张rgb点阵图(f1,f2,f3,f4)
;[2000000,?]    [32m,?)    自由内存(注意洞)
;#########################################################
;#######################################################
;#########################################################
;#######################################################








;################core.bin文件分布(具体)###################
;#########################################################
;#######################################################
;#########################################################
;[0,fff]:为了从bios启动
;0.old/:
;	0/:
;		mbr.s
;	200/:
;		stillin16.s
;	400/:
;		320x240.s
;		1024x768.s
;		text.s
;	800/:
;		enter64.s
;		prepare64.s

;[0,fff]:为了从efi启动
;0.new/:
;	efistub.s

;[1000,1fff]:前一半是简单的anscii字符串,后一半是anscii点阵表
;1000/:
;	data.s

;[2000,3fff]:这里只干一件事:32个异常的中断处理函数
;2000/:
;	chip:
;		apic.s
;		pic.s
;	exception:
;		exceptions.s
;		lastword.s			;默认的处理方法是蓝屏丢出所有寄存器

;[4000,7fff]:这里必须用汇编,因为奇怪的功能用C要多写好长的代码，
;比如jmp/call/in/out/rdmsr/wrmsr/cpuid等等
;而且没有必要的交叉混杂被编译器折磨实在浪费生命。
;4000/:
;	init:
;		1:
;			8254.s
;			input.s
;		2:
;			acpi.s
;		3:
;			anscii.s
;		4:
;			pciold.s
;			pcinew.s
;		5:
;			usb.s
;		6:
;			what.s
;		7:
;			bin.s
;	main:
;		f1.s
;		f2.s
;		f3.s
;		f4.s
;		main.s
;	wrap1:
;		convert.s
;		f1.operator.s
;		f4.list.s
;		f4.operator.s
;		f4.say.s
;		f4.search.s
;	wrap:
;		interrupt.s
;		port.s
;		screen.s
;		wait.s

;[8000,ffff]:这里是用纯C写的驱动
;gcc负责把.c翻译成.o文件
;ld负责把一大堆.o文件合成一个.bin给cpu玩
;8000/:
;	init:
;		start.c
;		ide.c
;		ahci.c
;		xhcihost.c
;		xhciport.c
;	main:
;		master.c
;	wrap2:
;		ext.c
;		fat.c
;		hfs.c
;		ntfs.c
;	wrap1:
;		convert.c
;		remember.c
;	wrap:
;		identify.c
;		read.c
;#######################################################
;#########################################################
;#######################################################
;#########################################################








;####################内存分布(具体)#######################
;#########################################################
;#######################################################
;#########################################################
;>>>>>>>>>>>[0,fff]:这里是BIOS遗留下来的"有关这个世界的线索"
;[0,3ff]    [0,1023]    real mode interrupt vector table
;[400,4ff]    [1024,1279]    bios data area
;[500,57f]    [1280,1535]    cmos dump from port 0x70 and 0x71
;[600,7ff]    [1536,2047]    bornhome
;[800,fff]    [2048,4095]
;				+10:jmp rax
;				+40:gdtr
;				+50:idtr
;				[ffc,ffd]    PM1a
;				[ffe,fff]    s5data

;>>>>>>>>>>>>[1000,7fff]:这里大部分是一堆纯数据,CPU需要这些信息来好好干活
;[1000,1fff]    [4096,9191]    e820 memory infomation
;[2000,2fff]    [8192,12288]    screen infomation
;[3000,3fff]    [12288,16383]    anscii table and pml4

;[4000,4fff]    [16384,20479]    gdt
;[5000,5fff]    [20480,24579]    idt
;[6000,6fff]    [24580,28671]    old page directory
;[7000,7fff]    [28672,32768]    old page directory pointer table

;;>>>>>>>>>>>>[1000,9ffff]:pre kernel area
;[10000,1ffff]    [64k,128k)    /pre kernel code	;core.bin扔进内存就能活着
;[20000,2ffff]    [128k,192k)    空着
;[30000,3ffff]    [192k,256k)    /anscii
;[40000,4ffff]    [256k,320k)    /acpi
;[50000,5ffff]    [320k,384k)    /irq table
;[60000,6ffff]    [384k,448k)    /pci
;[70000,7ffff]    [448k,512k)    /bin
;[80000,8ffff]    [512k,576k)    pd
;[90000,90fff]    [576k,580k)    pml4
;[91000,91fff]    [580k,584k)    pdpt
;[92000~9fff8]:stack

;;>>>>>>>>>>>>[100000,ffffff]:kernel area,到了这里就是海阔天空啦,纯C的世界想怎么造都行
;[10 0000,1f ffff]    [1m,2m)    kernel code
;[20 0000,2f ffff]    [2m,3m)
;[30 0000,3f ffff]    [3m,4m)

;[40 0000,4f ffff]    [4m,5m)
;[50 0000,5f ffff]    [5m,6m)    ahci driver
;[60 0000,6f ffff]    [8m,7m)    xhci host driver
;[70 0000,7f ffff]    [7m,8m)    xhci port driver

;[80 0000,8f ffff]    [8m,9m)    disk list
;[90 0000,9f ffff]    [9m,10m)    fs buffer
;[a0 0000,af ffff]    [10m,11m)    disk list
;[b0 0000,bf ffff]    [11m,12m)    data buffer

;[c0 0000,cf ffff]    [12m,13m)    console buffer
;[d0 0000,df ffff]    [13m,14m)    journal buffer
;[e0 0000,ef ffff]    [14m,15m)    --------not used--------
;[f0 0000,ff ffff]    [15m,16m)    isa hole

;[100 0000,13f ffff]    [16m,20m)    1024*1024*rgba pixel data
;[140 0000,17f ffff]    [20m,24m)    1024*1024*rgba pixel data
;[180 0000,1bf ffff]    [24m,28m)    1024*1024*rgba pixel data
;[1c0 0000,1cf ffff]    [28m,32m)    1024*1024*rgba pixel data
;########################################################
;#########################################################
;#########################################################
;#########################################################



incbin "core.bin"
times 0x400000-($-$$)db 0
